{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/lcm/Documents/local-repos/next-landing-page/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useMemo, useState } from \"react\";\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport {\n  type Container,\n  type ISourceOptions,\n  MoveDirection,\n  OutMode,\n} from \"@tsparticles/engine\";\nimport { loadFull } from \"tsparticles\";\n\nexport default function Home() {\n  const [init, setInit] = useState(false);\n\n  // Should be run only once per application lifetime\n  useEffect(() => {\n    initParticlesEngine(async (engine) => {\n      await loadFull(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n\n  const particlesLoaded = async (container?: Container): Promise<void> => {\n    console.log(container);\n  };\n\n  const options: ISourceOptions = useMemo(\n    () => ({\n      background: {\n        color: {\n          value: \"#0d47a1\",\n        },\n      },\n      fpsLimit: 120,\n      interactivity: {\n        events: {\n          onClick: {\n            enable: true,\n            mode: \"push\",\n          },\n          onHover: {\n            enable: true,\n            mode: \"repulse\",\n          },\n        },\n        modes: {\n          push: {\n            quantity: 4,\n          },\n          repulse: {\n            distance: 200,\n            duration: 0.4,\n          },\n        },\n      },\n      particles: {\n        color: {\n          value: \"#ffffff\",\n        },\n        links: {\n          color: \"#ffffff\",\n          distance: 150,\n          enable: true,\n          opacity: 0.5,\n          width: 1,\n        },\n        move: {\n          direction: MoveDirection.none,\n          enable: true,\n          outModes: {\n            default: OutMode.out,\n          },\n          random: false,\n          speed: 6,\n          straight: false,\n        },\n        number: {\n          density: {\n            enable: true,\n          },\n          value: 80,\n        },\n        opacity: {\n          value: 0.5,\n        },\n        shape: {\n          type: \"circle\",\n        },\n        size: {\n          value: { min: 1, max: 5 },\n        },\n      },\n      detectRetina: true,\n    }),\n    [],\n  );\n\n  if (init) {\n    return (\n      <Particles\n        id=\"tsparticles\"\n        particlesLoaded={particlesLoaded}\n        options={options}\n      />\n    );\n  }\n\n  return <></>;\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AAVA;;;;;;AAYe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,mDAAmD;IACnD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,CAAA,GAAA,uKAAA,CAAA,sBAAmB,AAAD,EAAE,OAAO;YACzB,MAAM,CAAA,GAAA,2IAAA,CAAA,WAAQ,AAAD,EAAE;QACjB,GAAG,IAAI,CAAC;YACN,QAAQ;QACV;IACF,GAAG,EAAE;IAEL,MAAM,kBAAkB,OAAO;QAC7B,QAAQ,GAAG,CAAC;IACd;IAEA,MAAM,UAA0B,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EACpC,IAAM,CAAC;YACL,YAAY;gBACV,OAAO;oBACL,OAAO;gBACT;YACF;YACA,UAAU;YACV,eAAe;gBACb,QAAQ;oBACN,SAAS;wBACP,QAAQ;wBACR,MAAM;oBACR;oBACA,SAAS;wBACP,QAAQ;wBACR,MAAM;oBACR;gBACF;gBACA,OAAO;oBACL,MAAM;wBACJ,UAAU;oBACZ;oBACA,SAAS;wBACP,UAAU;wBACV,UAAU;oBACZ;gBACF;YACF;YACA,WAAW;gBACT,OAAO;oBACL,OAAO;gBACT;gBACA,OAAO;oBACL,OAAO;oBACP,UAAU;oBACV,QAAQ;oBACR,SAAS;oBACT,OAAO;gBACT;gBACA,MAAM;oBACJ,WAAW,sLAAA,CAAA,gBAAa,CAAC,IAAI;oBAC7B,QAAQ;oBACR,UAAU;wBACR,SAAS,2KAAA,CAAA,UAAO,CAAC,GAAG;oBACtB;oBACA,QAAQ;oBACR,OAAO;oBACP,UAAU;gBACZ;gBACA,QAAQ;oBACN,SAAS;wBACP,QAAQ;oBACV;oBACA,OAAO;gBACT;gBACA,SAAS;oBACP,OAAO;gBACT;gBACA,OAAO;oBACL,MAAM;gBACR;gBACA,MAAM;oBACJ,OAAO;wBAAE,KAAK;wBAAG,KAAK;oBAAE;gBAC1B;YACF;YACA,cAAc;QAChB,CAAC,GACD,EAAE;IAGJ,IAAI,MAAM;QACR,qBACE,8OAAC,2JAAA,CAAA,UAAS;YACR,IAAG;YACH,iBAAiB;YACjB,SAAS;;;;;;IAGf;IAEA,qBAAO;AACT","debugId":null}}]
}